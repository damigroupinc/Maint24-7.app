{"version":3,"sources":["src/app/payments/payments.page.html","src/app/payments/payments.module.ts","src/app/payments/payments.page.scss","src/app/payments/payments.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button  defaultHref=\\\"home\\\">\\n      </ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      {{ global.name }} - Payments\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card class=\\\"welcome-card\\\" *ngFor=\\\"let item of listContracts\\\">\\n    <ion-img src=\\\"../../assets/img/paypal/paypal.jpg\\\"></ion-img>\\n    <ion-card-header>\\n      <ion-card-subtitle>Rent Payment<br /></ion-card-subtitle>\\n      <ion-card-title>PayPal</ion-card-title>\\n      <ion-row>\\n        <ion-col>\\n          Total Payment\\n        </ion-col>\\n        <ion-col>\\n          {{currencyIcon}} {{ item.rent }}\\n        </ion-col>\\n      </ion-row>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-button expand=\\\"full\\\" color=\\\"success\\\" (click)=\\\"payWithPaypal(\\n        item.paypalid,\\n        item.rent, \\n        item.unit,\\n        item.contract,\\n        item.landlord,\\n        item.tenant\\n      )\\\">Pay with PayPal</ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n  \\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PaymentsPage } from './payments.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaymentsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PaymentsPage]\n})\nexport class PaymentsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnRzL3BheW1lbnRzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { PayPal, PayPalPayment, PayPalConfiguration } from '@ionic-native/paypal/ngx';\nimport { Router } from '@angular/router';\n\nimport { HttpClient } from '@angular/common/http';\nimport { GlobalService } from '../global.service';\n\nimport { InterfaceContract } from '../InterfaceContract';\nimport { InterfaceFinance } from '../interfaceFinance';\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.page.html',\n  styleUrls: ['./payments.page.scss'],\n})\nexport class PaymentsPage implements OnInit {\n\n  public paymentAmount: string = '0.00';\n  public currency: string = 'USD';\n  public currencyIcon: string = '$';\n  public paypalid: string = '';\n\n  public postData: any;\n  public userData: any;\n\n  public listContracts: InterfaceContract;\n\n  constructor(\n    public global: GlobalService,\n    public http: HttpClient,\n    private router: Router,\n    private payPal: PayPal) { }\n\n  ngOnInit() {\n    this.userData = this.global.getUser();\n    //this.paymentAmount = '0.50';\n    //this.paypalid = \n    //'ARzM-lszQ2f_fv5Uw5fnFoIkDmKQi46UpXk6nSi_HRVz6pxj8Jwat8X495c-SH2-eHGhOP69eQovItiX';\n\n    this.postData = {\n      user_id: this.userData.id,\n      classe: 'TENANT',\n    };\n    this.http.put<InterfaceContract>\n      (this.global.urlServer + 'infoContract', this.postData).\n      subscribe(data => {\n        this.listContracts = data;\n      });\n\n  }\n\n  payWithPaypal(\n    paypalid: string,\n    paypalrent: string,\n    unit: string,\n    contract: string,\n    landlord: string,\n    tenant: string\n  ) {\n\n    console.log(\n      'paypal  ==> ', paypalid,\n      'paypalrent ==> ', paypalrent,\n      'unit  ==> ', unit,\n      'contract  ==> ', contract,\n      'landlord  ==> ', landlord,\n      'paypal  ==> ', tenant);\n\n\n    this.payPal.init({\n      PayPalEnvironmentProduction: '0',\n      PayPalEnvironmentSandbox: paypalid,\n    }).then(() => {\n      // Environments: PayPalEnvironmentNoNetwork, PayPalEnvironmentSandbox, PayPalEnvironmentProduction\n      this.payPal.prepareToRender('PayPalEnvironmentSandbox', new PayPalConfiguration({\n        // Only needed if you get an \"Internal Service Error\" after PayPal login!\n        //payPalShippingAddressOption: 2 // PayPalShippingAddressOptionPayPal\n      })).then(() => {\n        //\n        let payment = new PayPalPayment(paypalrent, 'USD', 'Description', 'sale');\n        this.payPal.renderSinglePaymentUI(payment).then((res) => {\n          this.saveFinance(paypalid, paypalrent, unit, contract, landlord, tenant);\n          this.global.presentToastGeneric('We received your payment and update the records. Thanks!', 'success');\n          this.router.navigate(['/home']);\n        }, () => {\n          // Error or render dialog closed without being successful\n        });\n      }, () => {\n        // Error in configuration\n      });\n    }, () => {\n      // Error in initialization, maybe PayPal isn't supported or something else\n    });\n  }\n\n  private newMethod(): string {\n    return this.currency;\n  }\n\n  saveFinance($paypalid: string, $paypalrent: string, $unit: string, $contract: string, $landlord: string, $tenant: string) {\n    this.postData = {\n      paypalid: $paypalid,\n      paypalrent: $paypalrent,\n      unit: $unit,\n      contract: $contract,\n      landlord: $landlord,\n      tenant: $tenant\n    };\n    this.http.put<InterfaceFinance>\n      (this.global.urlServer + 'saveFinance', this.postData).\n      subscribe(data => { });\n  };\n\n  getUser() {\n    return JSON.parse(localStorage.getItem('postLogin'));\n  }\n\n}"],"sourceRoot":"webpack:///","file":"payments-payments-module-es5.js"}