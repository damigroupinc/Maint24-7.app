{"version":3,"sources":["./src/app/wizprofile/wizprofile.page.html","./src/app/wizprofile/wizprofile.module.ts","./src/app/wizprofile/wizprofile.page.scss","./src/app/wizprofile/wizprofile.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,sPAAuL,eAAe,q6BAAq6B,UAAU,4HAA4H,OAAO,4fAA4f,mWAAmW,mWAAmW,8rDAA8rD,UAAU,kgBAAkgB,iXAAiX,kXAAkX,sWAAsW,gWAAgW,8iEAA8iE,UAAU,ihBAAihB,2XAA2X,qYAAqY,86C;;;;;;;;;;;;;;;;;;;;;;ACA51S;AACM;AACF;AACU;AAEV;AAEM;AAEnD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC1B;CACF,CAAC;AAWF,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;CAAG;AAAvB,oBAAoB;IAThC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,+DAAc,CAAC;KAC/B,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;ACzBjC;AAAe,6GAA8C,mJ;;;;;;;;;;;;;;;;;;;;;ACAnB;AAEK;AACG;AAET;AAEoB;AACF;AAET;AAOlD,IAAa,cAAc,GAA3B,MAAa,cAAc;IAuCzB,YACS,OAAsB,EACrB,MAAc,EACf,MAAqB,EACrB,IAAoB,EACpB,IAAgB;QAJhB,YAAO,GAAP,OAAO,CAAe;QACrB,WAAM,GAAN,MAAM,CAAQ;QACf,WAAM,GAAN,MAAM,CAAe;QACrB,SAAI,GAAJ,IAAI,CAAgB;QACpB,SAAI,GAAJ,IAAI,CAAY;QAzCzB,iBAAY,GAAG;YACb,YAAY,EAAE,CAAC;YACf,aAAa,EAAE,CAAC;YAChB,QAAQ,EAAE,KAAK;SAChB,CAAC;QAMF,WAAW;QACJ,aAAQ,GAAW,EAAE,CAAC;QACtB,aAAQ,GAAW,EAAE,CAAC;QACtB,oBAAe,GAAW,EAAE,CAAC;QAC7B,UAAK,GAAW,EAAE,CAAC;QACnB,UAAK,GAAW,EAAE,CAAC;QAE1B,aAAa;QACN,YAAO,GAAW,EAAE,CAAC;QACrB,YAAO,GAAW,EAAE,CAAC;QACrB,SAAI,GAAW,EAAE,CAAC;QAClB,UAAK,GAAW,EAAE,CAAC;QACnB,YAAO,GAAW,EAAE,CAAC;QAE5B,UAAU;QACH,cAAS,GAAW,EAAE,CAAC;QACvB,aAAQ,GAAW,EAAE,CAAC;QACtB,cAAS,GAAW,EAAE,CAAC;QACvB,gBAAW,GAAW,EAAE,CAAC;QACzB,WAAM,GAAW,EAAE,CAAC;QACpB,WAAM,GAAW,EAAE,CAAC;QACpB,UAAK,GAAW,EAAE,CAAC;QACnB,OAAE,GAAW,CAAC,CAAC;QAEf,aAAQ,GAAG,KAAK,CAAC;IAOK,CAAC;IAE9B,QAAQ;QACN,IAAI,CAAC,SAAS;YACd;gBACE,gBAAgB,EAAE,IAAI;gBACtB,UAAU,EAAE,KAAK;gBACjB,WAAW,EAAE,CAAC,EAAE,CAAC;aAClB,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAE9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACvC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;IAE7B,CAAC;IAAA,CAAC;IAEF,sBAAsB;QACpB,IAAI,QAAQ,GAAG;YACb,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;SACvB;QACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,wBAAwB,EAAE,QAAQ,CAAC;YACvF,SAAS,CAAC,IAAI,CAAC,EAAE;YACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE;gBACzB,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,sCAAsC,EAAE,QAAQ,CAAC,CAAC;gBAClF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;iBAAM;gBACL,WAAW;gBACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxB,aAAa;gBACb,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC5B,UAAU;gBACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC9B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,IAAI,CAAC,CAAC;gBACnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC;IACN,CAAC;IAED,kBAAkB,CAAC,KAAK;QACtB,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAChC,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;IACpB,SAAS,CAAC,MAAM,EAAE,SAAS;QACzB,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACjC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC7C,CAAC,CAAC;IACJ,CAAC;IAED,wBAAwB;IACxB,SAAS,CAAC,MAAM,EAAE,SAAS;QACzB,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACjC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC7C,CAAC,CAAC;IACJ,CAAC;IAED,2DAA2D;IAC3D,cAAc,CAAC,MAAM,EAAE,SAAS;QAC9B,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAC7C,CAAC;IAED,gFAAgF;IAChF,kBAAkB,CAAC,MAAM,EAAE,SAAS;QAClC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACzC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACrC,CAAC;IAED,gBAAgB,CAAC,MAAM,EAAE,SAAS;QAChC,SAAS,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACtC,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,MAAM,EAAE,SAAS;QAC1B,SAAS,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAChC,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IAED,eAAe;QACb,2DAA2D;QAC3D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,QAAQ,EAAE;YACzC,IAAI,CAAC,QAAQ,GAAG;gBACd,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,MAAM,EAAE,IAAI,CAAC,MAAM;aACpB,CAAC;YACF,IAAI,CAAC,OAAO,GAAG;gBACb,EAAE,EAAE,EAAE;gBACN,OAAO,EAAE,EAAE;aACZ;YACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC;gBACnE,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,OAAO,EAAE;oBAC/B,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,uDAAuD,EAAE,QAAQ,CAAC,CAAC;iBACpG;qBAAM,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,OAAO,EAAE;oBACtC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,uDAAuD,EAAE,QAAQ,CAAC,CAAC;iBACpG;qBAAM,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,UAAU,EAAE;oBACzC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,0DAA0D,EAAE,QAAQ,CAAC,CAAC;iBACvG;qBAAM,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,EAAE;oBAChC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,sCAAsC,EAAE,QAAQ,CAAC,CAAC;iBACnF;qBAAM;oBACL,IAAI,CAAC,KAAK,EAAE,CAAC;iBACd;YACH,CAAC,CAAC;SACL;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,0BAA0B,EAAE,QAAQ,CAAC,CAAC;SACvE;IACH,CAAC;IAED,KAAK;QACH,OAAO,IAAI,CAAC;IACd,CAAC;IAED,eAAe;QACb,IAAI,QAAQ,GAAG;YACb,UAAU,EAAE,IAAI,CAAC,QAAQ;YACzB,UAAU,EAAE,IAAI,CAAC,QAAQ;SAC1B;QACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,UAAU,EAAE,QAAQ,CAAC;YACzE,SAAS,CAAC,IAAI,CAAC,EAAE;YACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE;gBACzB,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,sCAAsC,EAAE,QAAQ,CAAC,CAAC;gBAClF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aACrC;iBAAM;gBACL,IAAI,QAAQ,GAAG;oBACb,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;oBACtB,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS;oBACpC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ;oBAClC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;oBAC9B,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;oBAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;oBAC5B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;oBAC5B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;iBAC7B;gBACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,wCAAwC,EAAE,SAAS,CAAC,CAAC;gBACrF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;aACpC;QACH,CAAC,CAAC;IACN,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,QAAQ,GAAG;YACd,UAAU,EAAE,IAAI,CAAC,QAAQ;YACzB,UAAU,EAAE,IAAI,CAAC,QAAQ;YACzB,OAAO,EAAE,IAAI,CAAC,KAAK;YACnB,OAAO,EAAE,IAAI,CAAC,KAAK;YACnB,SAAS,EAAE,IAAI,CAAC,OAAO;YACvB,SAAS,EAAE,IAAI,CAAC,OAAO;YACvB,MAAM,EAAE,IAAI,CAAC,IAAI;YACjB,OAAO,EAAE,IAAI,CAAC,KAAK;YACnB,SAAS,EAAE,IAAI,CAAC,OAAO;YACvB,MAAM,EAAE,IAAI,CAAC,QAAQ;YACrB,WAAW,EAAE,IAAI,CAAC,SAAS;YAC3B,UAAU,EAAE,IAAI,CAAC,QAAQ;YACzB,OAAO,EAAE,IAAI,CAAC,WAAW;YACzB,QAAQ,EAAE,IAAI,CAAC,MAAM;YACrB,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC3B,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;SACvB;QACD,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC;YACtF,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IAC1B,CAAC;CACF;;YA5MmB,4DAAa;YACb,sDAAM;YACP,6DAAa;YACf,6DAAc;YACd,+DAAU;;AA3CqB;IAA7C,+DAAS,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;oEAAe,wDAAS;oDAAC;AAD3D,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,wNAAqC;;KAEtC,CAAC;2EAyCkB,4DAAa;QACb,sDAAM;QACP,6DAAa;QACf,6DAAc;QACd,+DAAU;GA5Cd,cAAc,CAoP1B;AApP0B","file":"wizprofile-wizprofile-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"home\\\">\\n      </ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      {{ global.name }} - Profile\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen class='ion-padding' class='loginPage' scroll='false'>\\n  <ion-grid>\\n    <span class=\\\"slider-nav arrow-prev\\\" (click)=\\\"slidePrev(sliderOne,slideWithNav)\\\">\\n      <div class=\\\"prev-icon-custom custon-nav\\\" [class.disabled]=\\\"sliderOne.isBeginningSlide\\\"></div>\\n    </span>\\n    <ion-slides pager=\\\"true\\\" [options]=\\\"slideOptsOne\\\" #slideWithNav\\n      (ionSlideDidChange)=\\\"SlideDidChange(sliderOne,slideWithNav)\\\">\\n      <ion-slide>\\n        <ion-grid style='height: 100%'>\\n          <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\" style='height: 80%'>\\n            <ion-grid class='login-container'>\\n\\n              <ion-card>\\n                <ion-card-header color=\\\"success\\\">\\n                  <ion-card-subtitle>                  \\n                     <ion-label>                    \\n                    {{ classe }}'S PROFILE\\n                  </ion-label>\\n\\n                  <ion-avatar slot=\\\"end\\\">\\n                    <img src=\\\"{{image}}\\\">\\n                  </ion-avatar>\\n\\n                </ion-card-subtitle>\\n              </ion-card-header>\\n\\n                <form #loginForm='ngForm' (ngSubmit)='login()' autocomplete='off' class='login-form'>\\n                   <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Username</ion-label>\\n                      <ion-input name='username' id='username' type='text' required [(ngModel)]='username'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Email</ion-label>\\n                      <ion-input name='email' id='email' type='email' required [(ngModel)]='email'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Phone</ion-label>\\n                      <ion-input name='phone' id='phone' type='phone' required [(ngModel)]='phone'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n                   \\n                    <br>\\n\\n                    <div align=\\\"center\\\">\\n                      <ion-button color=\\\"warning\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button (click)=\\\"takePicture()\\\">\\n                        <ion-icon name=\\\"camera\\\" size=\\\"small\\\"></ion-icon>\\n                        Picture\\n                      </ion-button>\\n                      <ion-button color=\\\"success\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button (click)=\\\"updateUserProfile()\\\"\\n                        [disabled]='!loginForm.form.valid'>\\n                        <ion-icon name=\\\"checkmark-circle\\\" size=\\\"small\\\"></ion-icon>\\n                        Submit\\n                      </ion-button>\\n                      <ion-button color=\\\"secondary\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button\\n                        (click)=\\\"slideNext(sliderOne,slideWithNav)\\\">\\n                        <ion-icon name=\\\"arrow-round-forward\\\"></ion-icon>\\n                        Next\\n                      </ion-button>\\n                    </div>\\n                    <br>\\n\\n              </form>\\n                </ion-card>\\n            </ion-grid>\\n          </ion-row>\\n        </ion-grid>\\n\\n      </ion-slide>\\n\\n      <ion-slide>\\n        <ion-grid style='height: 100%'>\\n          <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\" style='height: 80%'>\\n            <ion-grid class='login-container'>\\n\\n                 <ion-card>\\n                <ion-card-header color=\\\"success\\\">\\n                  <ion-card-subtitle>                  \\n                  <ion-label>                    \\n                    {{ classe }}'S PROFILE\\n                  </ion-label>\\n                </ion-card-subtitle>\\n              </ion-card-header>\\n\\n\\n              <form #loginForm='ngForm' (ngSubmit)='login()' autocomplete='off' class='login-form'>\\n\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Address</ion-label>\\n                      <ion-input name='address' id='address' type='address' required [(ngModel)]='address'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n\\n\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Country</ion-label>\\n                      <ion-input name='country' id='country' type='country' required [(ngModel)]='country'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n\\n\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Zip Code</ion-label>\\n                      <ion-input name='zipcode' id='zipcode' type='zipcode' required [(ngModel)]='zipcode'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">State </ion-label>\\n                      <ion-input name='state' id='state' type='State' required [(ngModel)]='state'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">City</ion-label>\\n                      <ion-input name='city' id='city' type='city' required [(ngModel)]='city'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n                    <br>\\n                    <div align=\\\"center\\\">\\n                      <ion-button color=\\\"secondary\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button\\n                        (click)=\\\"slidePrev(sliderOne,slideWithNav)\\\">\\n                        <ion-icon name=\\\"arrow-round-back\\\" size=\\\"small\\\"></ion-icon>\\n                        Previus\\n                      </ion-button>\\n                      <ion-button color=\\\"warning\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button (click)=\\\"takePicture()\\\">\\n                        <ion-icon name=\\\"camera\\\" size=\\\"small\\\"></ion-icon>\\n                        Take picture\\n                      </ion-button>\\n                      <ion-button color=\\\"success\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button\\n                        (click)=\\\"updateUserProfile()\\\">\\n                        <!-- [disabled]='!loginForm.form.valid'> -->\\n                        <ion-icon name=\\\"checkmark-circle\\\" size=\\\"small\\\"></ion-icon>\\n                        Submit\\n                      </ion-button>\\n                      <ion-button color=\\\"secondary\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button\\n                        (click)=\\\"slideNext(sliderOne,slideWithNav)\\\">\\n                        <ion-icon name=\\\"arrow-round-forward\\\"></ion-icon>\\n                        Next\\n                      </ion-button>\\n                    </div>\\n                    <br>\\n\\n                  \\n              </form>\\n              </ion-card>\\n              </ion-grid>\\n          </ion-row>\\n            </ion-grid>\\n      </ion-slide>\\n\\n      <ion-slide>\\n        <ion-grid style='height: 100%'>\\n          <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\" style='height: 80%'>\\n            <ion-grid class='login-container'>\\n\\n              <ion-card>\\n                <ion-card-header color=\\\"success\\\">\\n                  <ion-card-subtitle>                  \\n                    <ion-label>                    \\n                    {{ classe }}'S PROFILE\\n                  </ion-label>\\n                </ion-card-subtitle>\\n              </ion-card-header>\\n\\n              <form #loginForm='ngForm' (ngSubmit)='login()' autocomplete='off' class='login-form'>\\n\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">First name<br /></ion-label>\\n                      <ion-input name='firstname' id='firstname' type='firstname' required [(ngModel)]='firstname'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Last name<br /></ion-label>\\n                      <ion-input name='lastname' id='lastname' type='lastname' required [(ngModel)]='lastname'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Date of Birth <br /></ion-label>\\n                      <ion-input name='dateofbirth' id='dateofbirth' type='date' required [(ngModel)]='dateofbirth'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n\\n                    <br>\\n                    <div align=\\\"center\\\">\\n                      <ion-button color=\\\"secondary\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button\\n                        (click)=\\\"slidePrev(sliderOne,slideWithNav)\\\">\\n                        <ion-icon name=\\\"arrow-round-back\\\" size=\\\"small\\\"></ion-icon>\\n                        Previus\\n                      </ion-button>\\n                      <ion-button color=\\\"warning\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button (click)=\\\"takePicture()\\\">\\n                        <ion-icon name=\\\"camera\\\" size=\\\"small\\\"></ion-icon>\\n                        Take picture\\n                      </ion-button>\\n                      <ion-button color=\\\"success\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button\\n                        (click)=\\\"updateUserProfile()\\\" [disabled]='!loginForm.form.valid'>\\n                        <!-- </ion-button> [disabled]='!loginForm.form.valid'> -->\\n                        <ion-icon name=\\\"checkmark-circle\\\" size=\\\"small\\\"></ion-icon>\\n                        Save\\n                      </ion-button>\\n\\n                    </div>\\n\\n                    <br>\\n                  \\n              </form>\\n\\n                </ion-card>\\n             </ion-grid>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-slide>\\n    </ion-slides>\\n  </ion-grid>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { WizprofilePage } from './wizprofile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WizprofilePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [WizprofilePage]\n})\nexport class WizprofilePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpenByb2ZpbGUvd2l6cHJvZmlsZS5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { InterfaceUsers } from '../interfaceusers';\nimport { Router } from '@angular/router';\n\nimport { ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MenuController, IonSlides } from '@ionic/angular';\n\nimport { GlobalService } from '../global.service';\n\n@Component({\n  selector: 'app-wizprofile',\n  templateUrl: './wizprofile.page.html',\n  styleUrls: ['./wizprofile.page.scss'],\n})\nexport class WizprofilePage implements OnInit {\n  @ViewChild('slideWithNav', { static: false }) slideWithNav: IonSlides;\n  sliderOne: any;\n  slideOptsOne = {\n    initialSlide: 0,\n    slidesPerView: 1,\n    autoplay: false\n  };\n\n  public userData: InterfaceUsers;\n  public postData: any;\n  public dataAux: any;\n\n  /* login */\n  public username: string = \"\";\n  public password: string = \"\";\n  public confirmpassword: string = \"\";\n  public email: string = \"\";\n  public phone: string = \"\";\n\n  /* address */\n  public country: string = \"\";\n  public address: string = \"\";\n  public city: string = \"\";\n  public state: string = \"\";\n  public zipcode: string = \"\";\n\n  /* info */\n  public firstname: string = \"\";\n  public lastname: string = \"\";\n  public bloodtype: string = \"\";\n  public dateofbirth: string = \"\";\n  public classe: string = \"\";\n  public status: string = \"\";\n  public image: string = \"\";\n  public id: number = 0;\n\n  public showSkip = false;\n\n  constructor(\n    public navCtrl: NavController,\n    private router: Router,\n    public global: GlobalService,\n    public menu: MenuController,\n    public http: HttpClient) { }\n\n  ngOnInit() {\n    this.sliderOne =\n    {\n      isBeginningSlide: true,\n      isEndSlide: false,\n      slidesItems: [{}]\n    };\n    this.userData = this.global.getUser();\n    console.log(' arrancar daqui ', this.userData);\n    this.searchCompleteUserData();\n\n    this.username = this.userData.username;\n    this.password = this.userData.password;\n    this.email = this.userData.email;\n    this.phone = this.userData.phone;\n    this.firstname = this.userData.firstname;\n    this.lastname = this.userData.lastname;\n    this.classe = this.userData.classe;\n    this.image = this.userData.image;\n    this.id = this.userData.id;\n\n  };\n\n  searchCompleteUserData() {\n    let postData = {\n      \"id\": this.userData.id,\n    }\n    this.http.put<InterfaceUsers>(this.global.urlServer + \"searchCompleteUserData\", postData).\n      subscribe(data => {\n        this.userData = data;\n        if (this.userData.id == 0) {\n          this.global.presentToastGeneric('Sorry, wrong login! Plase try again!', 'danger');\n          this.router.navigate(['/tutorial']);\n        } else {\n          /* login */\n          this.username = data.username;\n          this.email = data.email;\n          this.phone = data.phone;\n          /* address */\n          this.country = data.country;\n          this.address = data.address;\n          this.city = data.city;\n          this.state = data.state;\n          this.zipcode = data.zipcode;\n          /* info */\n          this.firstname = data.firstname;\n          this.lastname = data.lastname;\n          this.bloodtype = data.bloodtype;\n          this.dateofbirth = data.birth;\n          console.log(' dados retornado do banco -->', data);\n          console.log(this.firstname);\n        }\n      })\n  }\n\n  onSlideChangeStart(event) {\n    event.target.isEnd().then(isEnd => {\n      this.showSkip = !isEnd;\n    });\n  }\n\n  //Move to Next slide\n  slideNext(object, slideView) {\n    slideView.slideNext(500).then(() => {\n      this.checkIfNavDisabled(object, slideView);\n    })\n  }\n\n  //Move to previous slide\n  slidePrev(object, slideView) {\n    slideView.slidePrev(500).then(() => {\n      this.checkIfNavDisabled(object, slideView);\n    })\n  }\n\n  //Method called when slide is changed by drag or navigation\n  SlideDidChange(object, slideView) {\n    this.checkIfNavDisabled(object, slideView);\n  }\n\n  //Call methods to check if slide is first or last to enable disbale navigation  \n  checkIfNavDisabled(object, slideView) {\n    this.checkisBeginning(object, slideView);\n    this.checkisEnd(object, slideView);\n  }\n\n  checkisBeginning(object, slideView) {\n    slideView.isBeginning().then((istrue) => {\n      object.isBeginningSlide = istrue;\n    });\n  }\n\n  checkisEnd(object, slideView) {\n    slideView.isEnd().then((istrue) => {\n      object.isfEndSlide = istrue;\n    });\n  }\n\n  takePicture() {\n    this.router.navigate(['/avatar'])\n  }\n\n  ionViewDidLeave() {\n    // enable the root left menu when leaving the tutorial page\n    this.menu.enable(true);\n  }\n\n  updateUser() {\n    if (this.confirmpassword == this.password) {\n      this.postData = {\n        username: this.username,\n        password: this.password,\n        email: this.email,\n        phone: this.phone,\n        firstname: this.firstname,\n        lastname: this.lastname,\n        classe: this.classe,\n      };\n      this.dataAux = {\n        id: \"\",\n        message: \"\"\n      }\n      this.http.put(this.global.urlServer + 'newUserMobile', this.postData).\n        subscribe((data) => {\n          this.dataAux = data;\n          if (this.dataAux.id === \"email\") {\n            this.global.presentToastGeneric('Sorry, This email exist in database. Plase try again!', \"danger\");\n          } else if (this.dataAux.id === 'phone') {\n            this.global.presentToastGeneric('Sorry, This Phone exist in database. Plase try again!', \"danger\");\n          } else if (this.dataAux.id === 'username') {\n            this.global.presentToastGeneric('Sorry, This UserName exist in database. Plase try again!', \"danger\");\n          } else if (this.dataAux.id === 0) {\n            this.global.presentToastGeneric('Sorry, wrong login! Plase try again!', \"danger\");\n          } else {\n            this.login();\n          }\n        })\n    } else {\n      this.global.presentToastGeneric('Plase, confirm password!', \"danger\");\n    }\n  }\n\n  login() {\n    return true;\n  }\n\n  sendPostRequest() {\n    let postData = {\n      \"username\": this.username,\n      \"password\": this.password\n    }\n    this.http.put<InterfaceUsers>(this.global.urlServer + \"seekUser\", postData).\n      subscribe(data => {\n        this.userData = data;\n        if (this.userData.id == 0) {\n          this.global.presentToastGeneric('Sorry, wrong login! Plase try again!', \"danger\");\n          this.router.navigateByUrl('/login');\n        } else {\n          let postData = {\n            \"id\": this.userData.id,\n            \"firstname\": this.userData.firstname,\n            \"lastname\": this.userData.lastname,\n            \"classe\": this.userData.classe,\n            \"status\": this.userData.status,\n            \"email\": this.userData.email,\n            \"phone\": this.userData.phone,\n            \"image\": this.userData.image,\n          }\n          this.global.saveUser(postData);\n          this.global.presentToastGeneric('Login was successfull. Enjoy your app!', \"success\");\n          this.router.navigate(['/welcome']);\n        }\n      })\n  }\n\n  updateUserProfile() {\n    this.postData = {\n      \"username\": this.username,\n      \"password\": this.password,\n      \"email\": this.email,\n      \"phone\": this.phone,\n      \"country\": this.country,\n      \"address\": this.address,\n      \"city\": this.city,\n      \"state\": this.state,\n      \"zipcode\": this.zipcode,\n      \"name\": this.lastname,\n      \"firstname\": this.firstname,\n      \"lastname\": this.lastname,\n      \"birth\": this.dateofbirth,\n      \"classe\": this.classe,\n      \"user_id\": this.userData.id,\n      \"id\": this.userData.id,\n    }\n    console.log(' antes de tudo ', this.postData);\n    this.http.put<InterfaceUsers>(this.global.urlServer + \"saveLoginProfile\", this.postData).\n      subscribe(data => { })\n  }\n}"],"sourceRoot":"webpack:///"}