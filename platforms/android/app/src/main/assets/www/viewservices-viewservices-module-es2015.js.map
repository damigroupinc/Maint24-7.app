{"version":3,"sources":["./src/app/viewservices/viewservices.page.html","./src/app/viewservices/viewservices.module.ts","./src/app/viewservices/viewservices.page.scss","./src/app/viewservices/viewservices.page.ts"],"names":[],"mappings":"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","file":"viewservices-viewservices-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>  \\n    <ion-title>View Orders</ion-title>\\n  </ion-toolbar>\\n</ion-header> \\n\\n<ion-content>\\n  <ion-fab *ngIf=\\\"ImLandLord()\\\" vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n      <ion-fab-button color=\\\"success\\\" class=\\\"pt-xs--4\\\" (click)=\\\"newOrder()\\\">\\n        <ion-icon name=\\\"add\\\"></ion-icon>        \\n      </ion-fab-button>\\n    </ion-fab>\\n    <ion-card *ngFor=\\\"let item of listTodayOrders\\\">\\n      <ion-card-content>\\n      <p *ngIf=\\\"item.id\\\" style='font-size: 11px;'>\\n        Work Order: {{ item.id }} <br> Date: {{ item.date_created_string | date:\\\"MM/dd/yyyy\\\" }} <br />        \\n      </p>\\n      <div *ngIf=\\\"item.building_name\\\">\\n            <br />\\n            {{ item.building_name }} - {{ item.unit_name }} <br />\\n      </div>\\n      <strong>\\n        <p *ngIf=\\\"item.service_name\\\" style='font-size: 11px;'>\\n        Service: {{ item.service_name }}<br />\\n      </p>\\n     </strong>\\n    <p *ngIf=\\\"item.description_created\\\" style='font-size: 11px;'>\\n        Description: {{ item.description_created }} <br />  \\n      </p>\\n      <p *ngIf=\\\"item.status\\\" style='font-size: 11px;'>\\n        Status: {{ item.status }}\\n      </p>\\n      <ion-img *ngIf=\\\"item.imagem\\\" style=\\\"width: 75px; height: 75px;\\\" src=\\\"{{ item.imagem }}\\\"></ion-img>\\n      <script id=\\\"modal.html\\\" type=\\\"text/ng-template\\\">\\n        <div class=\\\"modal\\\" ng-click=\\\"closeModal()\\\">\\n          <ion-content>\\n            <img *ngIf=\\\"item.imagem\\\" src=\\\"{{ item.imagem }}\\\" style=\\\"display:block; 75px; max-width:75px; margin:auto\\\"/>\\n          </ion-content>\\n        </div>\\n      </script>\\n      <br />\\n      <div class=\\\"text-xs-center\\\">\\n        <ion-button size=\\\"small\\\" color=\\\"success\\\" class=\\\"pt-xs--4\\\" ion-button                   \\n          (click)=\\\"takePicture(\\n          item.id, item.building_name, item.unit_name, item.date_created_string, item.status\\n          )\\\">        \\n          <ion-icon name=\\\"camera\\\"></ion-icon>\\n          Take Picture        \\n        </ion-button> \\n        <!-- Only start  Work Order is the Supervisor and the status must be OPENED -->\\n        <ion-button size=\\\"small\\\" color=\\\"primary\\\" *ngIf=\\\"canStartOrder(item.status)\\\" class=\\\"pt-xs--4\\\" ion-button \\n          (click)=\\\"startOrder( \\n            item.id, item.building_name, item.unit_name, item.date_created_string, item.status\\n          )\\\"> \\n          <ion-icon name=\\\"play-circle\\\"></ion-icon>\\n          Start \\n        </ion-button>\\n        <!-- Only close Word Order is the Supervisor and the status must be PROCESS -->\\n        <ion-button size=\\\"small\\\" color=\\\"primary\\\" *ngIf=\\\"canCloseOrder(item.status)\\\" class=\\\"pt-xs--4\\\" ion-button \\n          (click)=\\\"closeOrder(\\n            item.id, item.building_name, item.unit_name, item.date_created_string, item.status\\n          )\\\"> \\n          <ion-icon name=\\\"power\\\"></ion-icon>\\n          Close\\n        </ion-button>\\n        <!-- Only approver Work Order is the Manager and the status must be CLOSED -->                       \\n        <ion-button size=\\\"small\\\" color=\\\"primary\\\" *ngIf=\\\"canApproveOrder(item.status)\\\" class=\\\"pt-xs--4\\\" ion-button                   \\n          (click)=\\\"approveOrder(\\n            item.id, item.building_name, item.unit_name, item.date_created_string, item.status\\n          )\\\"> \\n          <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\n          Approve \\n        </ion-button>\\n         <ion-button size=\\\"small\\\" color=\\\"danger\\\" *ngIf=\\\"canDeleteOrder(item.status, item.user_classe)\\\" class=\\\"pt-xs--4\\\" ion-button                   \\n          (click)=\\\"deleteOrder(item.id)\\\"> \\n          <ion-icon name=\\\"ios-trash\\\"></ion-icon>\\n          Delete \\n        </ion-button>\\n        <!-- Only approver Work Order is the Manager and the status must be CLOSED -->                       \\n        <ion-button size=\\\"small\\\" color=\\\"secondary\\\" class=\\\"pt-xs--2\\\" ion-button                   \\n          (click)=\\\"historyOrder(\\n            item.id, item.building_name, item.unit_name, item.date_created_string, item.status)\\\">\\n          <ion-icon name=\\\"logo-buffer\\\"></ion-icon>\\n          History\\n        </ion-button> \\n      </div>   \\n    </ion-card-content>    \\n  </ion-card>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ViewservicesPage } from './viewservices.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ViewservicesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ViewservicesPage]\n})\nexport class ViewservicesPageModule {}\n\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzZXJ2aWNlcy92aWV3c2VydmljZXMucGFnZS5zY3NzIn0= */\"","import { ServiceordersService } from '../serviceorders.service';\nimport { InterfaceOrders } from '../interfaceorders';\nimport { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AlertController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\n\nimport { GlobalService } from '../global.service';\n\n@Component({\n  selector: 'app-viewservices',\n  templateUrl: './viewservices.page.html',\n  styleUrls: ['./viewservices.page.scss'],\n})\nexport class ViewservicesPage implements OnInit {\n\n  public postData: any;\n  public userData: any;\n  public listTodayOrders: InterfaceOrders;\n  public data_return: InterfaceOrders;\n  public order_param: any;\n  public order_id: string;\n\n  public strMessageWOok: string = 'New Order Deleted!';\n  public strMessageWOerror: string = 'Error to delete WorkOrder!';\n\n  constructor(\n    public serviceordersservice: ServiceordersService,\n    private activaterouter: ActivatedRoute,\n    public alertController: AlertController,\n    private router: Router,\n    public global: GlobalService,\n    public http: HttpClient\n  ) { }\n\n  ngOnInit() {\n    this.userData = this.global.getUser();\n    this.activaterouter.paramMap.subscribe(params => {\n      this.order_param = JSON.parse(params.get('id'));\n    });\n    if (this.order_param.id != 0) {\n      this.postData = {\n        id: this.order_param.id,\n        classe: 'TENANT',\n      }\n    };\n    this.http.put<InterfaceOrders>\n      (this.global.urlServer + 'todayOrdersUsers', this.userData).\n      subscribe(data => { this.listTodayOrders = data; console.log(data) });\n  }\n\n  ImLandLord() {\n    if (this.userData.classe != 'LANDLORD') { return true } else { return false };\n  }\n\n  canDeleteOrder(status: string, classe: string) {\n    if (status == 'CREATED' && this.userData.classe == classe) { return true } else { return false };\n  }\n\n  canStartOrder(status: string) {\n    if (status == 'CREATED' && this.userData.classe == 'LANDLORD') { return true } else { return false };\n  }\n\n  canCloseOrder(status: string) {\n    if (status == 'PROCESS' && this.userData.classe == 'LANDLORD') { return true } else { return false };\n  }\n\n  canApproveOrder(status: string) {\n    if (status == 'CLOSED') { return true } else { return false };\n  }\n\n  takePicture(\n    $id: string,\n    $building: string,\n    $unit: string,\n    $date_created: string,\n    $status: string) {\n    let $param = JSON.stringify({\n      id: $id,\n      building: $building, unit: $unit, date_created: $date_created, status: $status\n    });\n    this.router.navigate(['/pictures/' + $param])\n  }\n\n  newOrder() {\n    this.router.navigate(['/lista']);\n  }\n\n  startOrder(\n    $id: string,\n    $building: string,\n    $unit: string,\n    $date_created: string,\n    $status: string) {\n    let $param = JSON.stringify({\n      id: $id,\n      building: $building, unit: $unit, date_created: $date_created, status: $status\n    });\n    this.router.navigate(['/startorder/' + $param]);\n  }\n\n  closeOrder(\n    $id: string,\n    $building: string,\n    $unit: string,\n    $date_created: string,\n    $status: string) {\n    let $param = JSON.stringify({\n      id: $id,\n      building: $building, unit: $unit, date_created: $date_created, status: $status\n    });\n    this.router.navigate(['/closeorder/' + $param]);\n  }\n\n  approveOrder(\n    $id: string,\n    $building: string,\n    $unit: string,\n    $date_created: string,\n    $status: string) {\n    let $param = JSON.stringify({\n      id: $id,\n      building: $building, unit: $unit, date_created: $date_created, status: $status\n    });\n    this.router.navigate(['/approveorder/' + $param]);\n  }\n\n  historyOrder(\n    $id: string,\n    $building: string,\n    $unit: string,\n    $date_created: string,\n    $status: string) {\n    let $param = JSON.stringify({\n      id: $id,\n      building: $building, unit: $unit, date_created: $date_created, status: $status\n    });\n    this.router.navigate(['/history/' + $param])\n  }\n\n  deleteOrder($id: string) {\n    this.makeyouShure($id);\n    this.router.navigate(['/home/']);\n  }\n\n  async makeyouShure($id: string) {\n    let trueReturn = false;\n    const alert = await this.alertController.create({\n      header: 'Confirm!',\n      message: 'Are you shure what delete this WorkOrder?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Cancelado');\n          }\n        }, {\n          text: 'Confirm',\n          handler: () => {\n            this.deleteHTTPWorkOrder($id)\n            console.log('Confirm Okay');\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  deleteHTTPWorkOrder($id: string) {\n    /* first -> question for make you shure */\n    let postData = {\n      id: $id,\n      user_id: this.userData.id,\n    };\n    console.log(postData, this.userData);\n    this.http.put(this.global.urlServer + 'deleteWOMaster', postData).subscribe((data) => {\n      this.global.presentToastGeneric(this.strMessageWOok, 'success');\n    }, error => {\n      this.global.presentToastGeneric(this.strMessageWOerror, 'danger');\n    });\n  }\n\n}\n\n\n\n\n"],"sourceRoot":"webpack:///"}