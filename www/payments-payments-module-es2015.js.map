{"version":3,"sources":["./src/app/payments/payments.page.html","./src/app/payments/payments.module.ts","./src/app/payments/payments.page.scss","./src/app/payments/payments.page.ts"],"names":[],"mappings":"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","file":"payments-payments-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button  defaultHref=\\\"home\\\">\\n      </ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      {{ global.name }} - Payments\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card class=\\\"welcome-card\\\" *ngFor=\\\"let item of listContracts\\\">\\n    <ion-img src=\\\"../../assets/img/paypal/paypal.jpg\\\"></ion-img>\\n    <ion-card-header>\\n      <ion-card-subtitle>Rent Payment<br /></ion-card-subtitle>\\n      <ion-card-title>PayPal</ion-card-title>\\n      <ion-row>\\n        <ion-col>\\n          Total Payment\\n        </ion-col>\\n        <ion-col>\\n          {{currencyIcon}} {{ item.rent }}\\n        </ion-col>\\n      </ion-row>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-button expand=\\\"full\\\" color=\\\"success\\\" (click)=\\\"payWithPaypal(\\n        item.paypalid,\\n        item.rent, \\n        item.unit,\\n        item.contract,\\n        item.landlord,\\n        item.tenant\\n      )\\\">Pay with PayPal</ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n  \\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PaymentsPage } from './payments.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaymentsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PaymentsPage]\n})\nexport class PaymentsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnRzL3BheW1lbnRzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { PayPal, PayPalPayment, PayPalConfiguration } from '@ionic-native/paypal/ngx';\nimport { Router } from '@angular/router';\n\nimport { HttpClient } from '@angular/common/http';\nimport { GlobalService } from '../global.service';\n\nimport { InterfaceContract } from '../InterfaceContract';\nimport { InterfaceFinance } from '../interfaceFinance';\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.page.html',\n  styleUrls: ['./payments.page.scss'],\n})\nexport class PaymentsPage implements OnInit {\n\n  public paymentAmount: string = '0.00';\n  public currency: string = 'USD';\n  public currencyIcon: string = '$';\n  public paypalid: string = '';\n\n  public postData: any;\n  public userData: any;\n\n  public listContracts: InterfaceContract;\n\n  constructor(\n    public global: GlobalService,\n    public http: HttpClient,\n    private router: Router,\n    private payPal: PayPal) { }\n\n  ngOnInit() {\n    this.userData = this.global.getUser();\n    //this.paymentAmount = '0.50';\n    //this.paypalid = \n    //'ARzM-lszQ2f_fv5Uw5fnFoIkDmKQi46UpXk6nSi_HRVz6pxj8Jwat8X495c-SH2-eHGhOP69eQovItiX';\n\n    this.postData = {\n      user_id: this.userData.id,\n      classe: 'TENANT',\n    };\n    this.http.put<InterfaceContract>\n      (this.global.urlServer + 'infoContract', this.postData).\n      subscribe(data => {\n        this.listContracts = data;\n      });\n\n  }\n\n  payWithPaypal(\n    paypalid: string,\n    paypalrent: string,\n    unit: string,\n    contract: string,\n    landlord: string,\n    tenant: string\n  ) {\n\n    console.log(\n      'paypal  ==> ', paypalid,\n      'paypalrent ==> ', paypalrent,\n      'unit  ==> ', unit,\n      'contract  ==> ', contract,\n      'landlord  ==> ', landlord,\n      'paypal  ==> ', tenant);\n\n\n    this.payPal.init({\n      PayPalEnvironmentProduction: '0',\n      PayPalEnvironmentSandbox: paypalid,\n    }).then(() => {\n      // Environments: PayPalEnvironmentNoNetwork, PayPalEnvironmentSandbox, PayPalEnvironmentProduction\n      this.payPal.prepareToRender('PayPalEnvironmentSandbox', new PayPalConfiguration({\n        // Only needed if you get an \"Internal Service Error\" after PayPal login!\n        //payPalShippingAddressOption: 2 // PayPalShippingAddressOptionPayPal\n      })).then(() => {\n        //\n        let payment = new PayPalPayment(paypalrent, 'USD', 'Description', 'sale');\n        this.payPal.renderSinglePaymentUI(payment).then((res) => {\n          this.saveFinance(paypalid, paypalrent, unit, contract, landlord, tenant);\n          this.global.presentToastGeneric('We received your payment and update the records. Thanks!', 'success');\n          this.router.navigate(['/home']);\n        }, () => {\n          // Error or render dialog closed without being successful\n        });\n      }, () => {\n        // Error in configuration\n      });\n    }, () => {\n      // Error in initialization, maybe PayPal isn't supported or something else\n    });\n  }\n\n  private newMethod(): string {\n    return this.currency;\n  }\n\n  saveFinance($paypalid: string, $paypalrent: string, $unit: string, $contract: string, $landlord: string, $tenant: string) {\n    this.postData = {\n      paypalid: $paypalid,\n      paypalrent: $paypalrent,\n      unit: $unit,\n      contract: $contract,\n      landlord: $landlord,\n      tenant: $tenant\n    };\n    this.http.put<InterfaceFinance>\n      (this.global.urlServer + 'saveFinance', this.postData).\n      subscribe(data => { });\n  };\n\n  getUser() {\n    return JSON.parse(localStorage.getItem('postLogin'));\n  }\n\n}"],"sourceRoot":"webpack:///"}