{"version":3,"sources":["src/app/wizprofile/wizprofile.page.html","src/app/wizprofile/wizprofile.module.ts","src/app/wizprofile/wizprofile.page.scss","src/app/wizprofile/wizprofile.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"home\\\">\\n      </ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      {{ global.name }} - Profile\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen class='ion-padding' class='loginPage' scroll='false'>\\n  <ion-grid>\\n    <span class=\\\"slider-nav arrow-prev\\\" (click)=\\\"slidePrev(sliderOne,slideWithNav)\\\">\\n      <div class=\\\"prev-icon-custom custon-nav\\\" [class.disabled]=\\\"sliderOne.isBeginningSlide\\\"></div>\\n    </span>\\n    <ion-slides pager=\\\"true\\\" [options]=\\\"slideOptsOne\\\" #slideWithNav\\n      (ionSlideDidChange)=\\\"SlideDidChange(sliderOne,slideWithNav)\\\">\\n      <ion-slide>\\n        <ion-grid style='height: 100%'>\\n          <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\" style='height: 80%'>\\n            <ion-grid class='login-container'>\\n\\n              <ion-card>\\n                <ion-card-header color=\\\"success\\\">\\n                  <ion-card-subtitle>                  \\n                     <ion-label>                    \\n                    {{ classe }}'S PROFILE\\n                  </ion-label>\\n\\n                  <ion-avatar slot=\\\"end\\\">\\n                    <img src=\\\"{{image}}\\\">\\n                  </ion-avatar>\\n\\n                </ion-card-subtitle>\\n              </ion-card-header>\\n\\n                <form #loginForm='ngForm' (ngSubmit)='login()' autocomplete='off' class='login-form'>\\n                   <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Username</ion-label>\\n                      <ion-input name='username' id='username' type='text' required [(ngModel)]='username'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Email</ion-label>\\n                      <ion-input name='email' id='email' type='email' required [(ngModel)]='email'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Phone</ion-label>\\n                      <ion-input name='phone' id='phone' type='phone' required [(ngModel)]='phone'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n                   \\n                    <br>\\n\\n                    <div align=\\\"center\\\">\\n                      <ion-button color=\\\"warning\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button (click)=\\\"takePicture()\\\">\\n                        <ion-icon name=\\\"camera\\\" size=\\\"small\\\"></ion-icon>\\n                        Picture\\n                      </ion-button>\\n                      <ion-button color=\\\"success\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button (click)=\\\"updateUserProfile()\\\"\\n                        [disabled]='!loginForm.form.valid'>\\n                        <ion-icon name=\\\"checkmark-circle\\\" size=\\\"small\\\"></ion-icon>\\n                        Submit\\n                      </ion-button>\\n                      <ion-button color=\\\"secondary\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button\\n                        (click)=\\\"slideNext(sliderOne,slideWithNav)\\\">\\n                        <ion-icon name=\\\"arrow-round-forward\\\"></ion-icon>\\n                        Next\\n                      </ion-button>\\n                    </div>\\n                    <br>\\n\\n              </form>\\n                </ion-card>\\n            </ion-grid>\\n          </ion-row>\\n        </ion-grid>\\n\\n      </ion-slide>\\n\\n      <ion-slide>\\n        <ion-grid style='height: 100%'>\\n          <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\" style='height: 80%'>\\n            <ion-grid class='login-container'>\\n\\n                 <ion-card>\\n                <ion-card-header color=\\\"success\\\">\\n                  <ion-card-subtitle>                  \\n                  <ion-label>                    \\n                    {{ classe }}'S PROFILE\\n                  </ion-label>\\n                </ion-card-subtitle>\\n              </ion-card-header>\\n\\n\\n              <form #loginForm='ngForm' (ngSubmit)='login()' autocomplete='off' class='login-form'>\\n\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Address</ion-label>\\n                      <ion-input name='address' id='address' type='address' required [(ngModel)]='address'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n\\n\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Country</ion-label>\\n                      <ion-input name='country' id='country' type='country' required [(ngModel)]='country'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n\\n\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Zip Code</ion-label>\\n                      <ion-input name='zipcode' id='zipcode' type='zipcode' required [(ngModel)]='zipcode'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">State </ion-label>\\n                      <ion-input name='state' id='state' type='State' required [(ngModel)]='state'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">City</ion-label>\\n                      <ion-input name='city' id='city' type='city' required [(ngModel)]='city'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n                    <br>\\n                    <div align=\\\"center\\\">\\n                      <ion-button color=\\\"secondary\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button\\n                        (click)=\\\"slidePrev(sliderOne,slideWithNav)\\\">\\n                        <ion-icon name=\\\"arrow-round-back\\\" size=\\\"small\\\"></ion-icon>\\n                        Previus\\n                      </ion-button>\\n                      <ion-button color=\\\"warning\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button (click)=\\\"takePicture()\\\">\\n                        <ion-icon name=\\\"camera\\\" size=\\\"small\\\"></ion-icon>\\n                        Take picture\\n                      </ion-button>\\n                      <ion-button color=\\\"success\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button\\n                        (click)=\\\"updateUserProfile()\\\">\\n                        <!-- [disabled]='!loginForm.form.valid'> -->\\n                        <ion-icon name=\\\"checkmark-circle\\\" size=\\\"small\\\"></ion-icon>\\n                        Submit\\n                      </ion-button>\\n                      <ion-button color=\\\"secondary\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button\\n                        (click)=\\\"slideNext(sliderOne,slideWithNav)\\\">\\n                        <ion-icon name=\\\"arrow-round-forward\\\"></ion-icon>\\n                        Next\\n                      </ion-button>\\n                    </div>\\n                    <br>\\n\\n                  \\n              </form>\\n              </ion-card>\\n              </ion-grid>\\n          </ion-row>\\n            </ion-grid>\\n      </ion-slide>\\n\\n      <ion-slide>\\n        <ion-grid style='height: 100%'>\\n          <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\" style='height: 80%'>\\n            <ion-grid class='login-container'>\\n\\n              <ion-card>\\n                <ion-card-header color=\\\"success\\\">\\n                  <ion-card-subtitle>                  \\n                    <ion-label>                    \\n                    {{ classe }}'S PROFILE\\n                  </ion-label>\\n                </ion-card-subtitle>\\n              </ion-card-header>\\n\\n              <form #loginForm='ngForm' (ngSubmit)='login()' autocomplete='off' class='login-form'>\\n\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">First name<br /></ion-label>\\n                      <ion-input name='firstname' id='firstname' type='firstname' required [(ngModel)]='firstname'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Last name<br /></ion-label>\\n                      <ion-input name='lastname' id='lastname' type='lastname' required [(ngModel)]='lastname'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n\\n                    <ion-item>\\n                      <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Date of Birth <br /></ion-label>\\n                      <ion-input name='dateofbirth' id='dateofbirth' type='date' required [(ngModel)]='dateofbirth'\\n                        style=\\\"background-Color: '#red';\\\">\\n                      </ion-input>\\n                    </ion-item>\\n\\n                    <br>\\n                    <div align=\\\"center\\\">\\n                      <ion-button color=\\\"secondary\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button\\n                        (click)=\\\"slidePrev(sliderOne,slideWithNav)\\\">\\n                        <ion-icon name=\\\"arrow-round-back\\\" size=\\\"small\\\"></ion-icon>\\n                        Previus\\n                      </ion-button>\\n                      <ion-button color=\\\"warning\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button (click)=\\\"takePicture()\\\">\\n                        <ion-icon name=\\\"camera\\\" size=\\\"small\\\"></ion-icon>\\n                        Take picture\\n                      </ion-button>\\n                      <ion-button color=\\\"success\\\" size=\\\"small\\\" class=\\\"pt-xs--4\\\" ion-button\\n                        (click)=\\\"updateUserProfile()\\\" [disabled]='!loginForm.form.valid'>\\n                        <!-- </ion-button> [disabled]='!loginForm.form.valid'> -->\\n                        <ion-icon name=\\\"checkmark-circle\\\" size=\\\"small\\\"></ion-icon>\\n                        Save\\n                      </ion-button>\\n\\n                    </div>\\n\\n                    <br>\\n                  \\n              </form>\\n\\n                </ion-card>\\n             </ion-grid>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-slide>\\n    </ion-slides>\\n  </ion-grid>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { WizprofilePage } from './wizprofile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WizprofilePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [WizprofilePage]\n})\nexport class WizprofilePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpenByb2ZpbGUvd2l6cHJvZmlsZS5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { InterfaceUsers } from '../interfaceusers';\nimport { Router } from '@angular/router';\n\nimport { ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MenuController, IonSlides } from '@ionic/angular';\n\nimport { GlobalService } from '../global.service';\n\n@Component({\n  selector: 'app-wizprofile',\n  templateUrl: './wizprofile.page.html',\n  styleUrls: ['./wizprofile.page.scss'],\n})\nexport class WizprofilePage implements OnInit {\n  @ViewChild('slideWithNav', { static: false }) slideWithNav: IonSlides;\n  sliderOne: any;\n  slideOptsOne = {\n    initialSlide: 0,\n    slidesPerView: 1,\n    autoplay: false\n  };\n\n  public userData: InterfaceUsers;\n  public postData: any;\n  public dataAux: any;\n\n  /* login */\n  public username: string = \"\";\n  public password: string = \"\";\n  public confirmpassword: string = \"\";\n  public email: string = \"\";\n  public phone: string = \"\";\n\n  /* address */\n  public country: string = \"\";\n  public address: string = \"\";\n  public city: string = \"\";\n  public state: string = \"\";\n  public zipcode: string = \"\";\n\n  /* info */\n  public firstname: string = \"\";\n  public lastname: string = \"\";\n  public bloodtype: string = \"\";\n  public dateofbirth: string = \"\";\n  public classe: string = \"\";\n  public status: string = \"\";\n  public image: string = \"\";\n  public id: number = 0;\n\n  public showSkip = false;\n\n  constructor(\n    public navCtrl: NavController,\n    private router: Router,\n    public global: GlobalService,\n    public menu: MenuController,\n    public http: HttpClient) { }\n\n  ngOnInit() {\n    this.sliderOne =\n    {\n      isBeginningSlide: true,\n      isEndSlide: false,\n      slidesItems: [{}]\n    };\n    this.userData = this.global.getUser();\n    console.log(' arrancar daqui ', this.userData);\n    this.searchCompleteUserData();\n\n    this.username = this.userData.username;\n    this.password = this.userData.password;\n    this.email = this.userData.email;\n    this.phone = this.userData.phone;\n    this.firstname = this.userData.firstname;\n    this.lastname = this.userData.lastname;\n    this.classe = this.userData.classe;\n    this.image = this.userData.image;\n    this.id = this.userData.id;\n\n  };\n\n  searchCompleteUserData() {\n    let postData = {\n      \"id\": this.userData.id,\n    }\n    this.http.put<InterfaceUsers>(this.global.urlServer + \"searchCompleteUserData\", postData).\n      subscribe(data => {\n        this.userData = data;\n        if (this.userData.id == 0) {\n          this.global.presentToastGeneric('Sorry, wrong login! Plase try again!', 'danger');\n          this.router.navigate(['/tutorial']);\n        } else {\n          /* login */\n          this.username = data.username;\n          this.email = data.email;\n          this.phone = data.phone;\n          /* address */\n          this.country = data.country;\n          this.address = data.address;\n          this.city = data.city;\n          this.state = data.state;\n          this.zipcode = data.zipcode;\n          /* info */\n          this.firstname = data.firstname;\n          this.lastname = data.lastname;\n          this.bloodtype = data.bloodtype;\n          this.dateofbirth = data.birth;\n          console.log(' dados retornado do banco -->', data);\n          console.log(this.firstname);\n        }\n      })\n  }\n\n  onSlideChangeStart(event) {\n    event.target.isEnd().then(isEnd => {\n      this.showSkip = !isEnd;\n    });\n  }\n\n  //Move to Next slide\n  slideNext(object, slideView) {\n    slideView.slideNext(500).then(() => {\n      this.checkIfNavDisabled(object, slideView);\n    })\n  }\n\n  //Move to previous slide\n  slidePrev(object, slideView) {\n    slideView.slidePrev(500).then(() => {\n      this.checkIfNavDisabled(object, slideView);\n    })\n  }\n\n  //Method called when slide is changed by drag or navigation\n  SlideDidChange(object, slideView) {\n    this.checkIfNavDisabled(object, slideView);\n  }\n\n  //Call methods to check if slide is first or last to enable disbale navigation  \n  checkIfNavDisabled(object, slideView) {\n    this.checkisBeginning(object, slideView);\n    this.checkisEnd(object, slideView);\n  }\n\n  checkisBeginning(object, slideView) {\n    slideView.isBeginning().then((istrue) => {\n      object.isBeginningSlide = istrue;\n    });\n  }\n\n  checkisEnd(object, slideView) {\n    slideView.isEnd().then((istrue) => {\n      object.isfEndSlide = istrue;\n    });\n  }\n\n  takePicture() {\n    this.router.navigate(['/avatar'])\n  }\n\n  ionViewDidLeave() {\n    // enable the root left menu when leaving the tutorial page\n    this.menu.enable(true);\n  }\n\n  updateUser() {\n    if (this.confirmpassword == this.password) {\n      this.postData = {\n        username: this.username,\n        password: this.password,\n        email: this.email,\n        phone: this.phone,\n        firstname: this.firstname,\n        lastname: this.lastname,\n        classe: this.classe,\n      };\n      this.dataAux = {\n        id: \"\",\n        message: \"\"\n      }\n      this.http.put(this.global.urlServer + 'newUserMobile', this.postData).\n        subscribe((data) => {\n          this.dataAux = data;\n          if (this.dataAux.id === \"email\") {\n            this.global.presentToastGeneric('Sorry, This email exist in database. Plase try again!', \"danger\");\n          } else if (this.dataAux.id === 'phone') {\n            this.global.presentToastGeneric('Sorry, This Phone exist in database. Plase try again!', \"danger\");\n          } else if (this.dataAux.id === 'username') {\n            this.global.presentToastGeneric('Sorry, This UserName exist in database. Plase try again!', \"danger\");\n          } else if (this.dataAux.id === 0) {\n            this.global.presentToastGeneric('Sorry, wrong login! Plase try again!', \"danger\");\n          } else {\n            this.login();\n          }\n        })\n    } else {\n      this.global.presentToastGeneric('Plase, confirm password!', \"danger\");\n    }\n  }\n\n  login() {\n    return true;\n  }\n\n  sendPostRequest() {\n    let postData = {\n      \"username\": this.username,\n      \"password\": this.password\n    }\n    this.http.put<InterfaceUsers>(this.global.urlServer + \"seekUser\", postData).\n      subscribe(data => {\n        this.userData = data;\n        if (this.userData.id == 0) {\n          this.global.presentToastGeneric('Sorry, wrong login! Plase try again!', \"danger\");\n          this.router.navigateByUrl('/login');\n        } else {\n          let postData = {\n            \"id\": this.userData.id,\n            \"firstname\": this.userData.firstname,\n            \"lastname\": this.userData.lastname,\n            \"classe\": this.userData.classe,\n            \"status\": this.userData.status,\n            \"email\": this.userData.email,\n            \"phone\": this.userData.phone,\n            \"image\": this.userData.image,\n          }\n          this.global.saveUser(postData);\n          this.global.presentToastGeneric('Login was successfull. Enjoy your app!', \"success\");\n          this.router.navigate(['/welcome']);\n        }\n      })\n  }\n\n  updateUserProfile() {\n    this.postData = {\n      \"username\": this.username,\n      \"password\": this.password,\n      \"email\": this.email,\n      \"phone\": this.phone,\n      \"country\": this.country,\n      \"address\": this.address,\n      \"city\": this.city,\n      \"state\": this.state,\n      \"zipcode\": this.zipcode,\n      \"name\": this.lastname,\n      \"firstname\": this.firstname,\n      \"lastname\": this.lastname,\n      \"birth\": this.dateofbirth,\n      \"classe\": this.classe,\n      \"user_id\": this.userData.id,\n      \"id\": this.userData.id,\n    }\n    console.log(' antes de tudo ', this.postData);\n    this.http.put<InterfaceUsers>(this.global.urlServer + \"saveLoginProfile\", this.postData).\n      subscribe(data => { })\n  }\n}"],"sourceRoot":"webpack:///","file":"wizprofile-wizprofile-module-es5.js"}