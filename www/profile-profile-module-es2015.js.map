{"version":3,"sources":["./src/app/profile/profile.page.html","./src/app/profile/profile.module.ts","./src/app/profile/profile.page.scss","./src/app/profile/profile.page.ts"],"names":[],"mappings":"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","file":"profile-profile-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"home\\\">\\n      </ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      {{ global.name }} - Profile\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"ion-padding\\\" class='loginPage' scroll='false'>\\n  <ion-grid style='height: 100%'>\\n    <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\" style='height: 80%'>\\n      <ion-grid class='login-container'>\\n        <form #loginForm='ngForm' (ngSubmit)='login()' autocomplete='off' class='login-form'>\\n          <ion-row>\\n            <ion-col>\\n              <ion-list inset>\\n                <ion-label><strong>{{ classe }}'s</strong> proffile<br /> <br /></ion-label>\\n                <ion-item>\\n                  <ion-label>First Name<br /></ion-label>\\n                  <ion-input placeholder='First name' name='firstname' id='firstname' type='firstname' required\\n                    [(ngModel)]='firstname' style=\\\"background-Color: '#red';\\\">\\n                  </ion-input>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-label>Last Name<br /></ion-label>\\n                  <ion-input placeholder='Lastname' name='lastname' id='lastname' type='lastname' required\\n                    [(ngModel)]='lastname' style=\\\"background-Color: '#red';\\\">\\n                  </ion-input>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-label>Email<br /></ion-label>\\n                  <ion-input placeholder='Email' name='email' id='email' type='email' required [(ngModel)]='email'\\n                    style=\\\"background-Color: '#red';\\\">\\n                  </ion-input>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-label>Phone<br /></ion-label>\\n                  <ion-input placeholder='phone' name='phone' id='phone' type='phone' required [(ngModel)]='phone'\\n                    style=\\\"background-Color: '#red';\\\">\\n                  </ion-input>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-label>Username<br /></ion-label>\\n                  <ion-input placeholder='Username' name='username' id='username' type='text' required\\n                    [(ngModel)]='username' style=\\\"background-Color: '#red';\\\">\\n                  </ion-input>\\n                </ion-item>\\n                <ion-button color=\\\"success\\\" class=\\\"pt-xs--4\\\" ion-button (click)=\\\"updateUser()\\\"\\n                  [disabled]='!loginForm.form.valid'>\\n                  <ion-icon name=\\\"checkmark-circle\\\" size=\\\"small\\\"></ion-icon>\\n                  Submit\\n                </ion-button>\\n              </ion-list>\\n            </ion-col>\\n          </ion-row>\\n        </form>\\n      </ion-grid>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { ToastController } from '@ionic/angular'; \nimport { NavController } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { InterfaceUsers } from '../interfaceusers';\nimport { Router } from '@angular/router';\n\nimport { GlobalService } from '../global.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n    \n  public userData: InterfaceUsers;\n  public postData: any;\n  public dataAux: any;\n\n  public username: string = \"\";      \n  public password: string = \"\";  \n  public confirmpassword: string = \"\";\n\n  public email: string = \"\"; \n  public phone: string = \"\";\n  public classe: string = \"\";\n  public firstname: string = \"\";\n  public lastname: string = \"\";\n   \n  constructor(\n    private toastController: ToastController,   \n    public navCtrl: NavController,\n    private router: Router, \n    public global: GlobalService,\n    public http: HttpClient ) {}\n      \n  ngOnInit() {\n    this.userData = this.getUser();\n\n    this.username = this.userData.username;    \n    this.password = this.userData.password;\n    this.email = this.userData.email;\n    this.phone = this.userData.phone;\n    this.firstname = this.userData.firstname;\n    this.lastname = this.userData.lastname;\n    this.classe = this.userData.classe;\n  };        \n  \n  updateUser() {    \n    if (this.confirmpassword == this.password) {\n      this.postData = {\n        username: this.username,      \n        password: this.password,  \n        email: this.email,\n        phone: this.phone,\n        firstname: this.firstname,\n        lastname: this.lastname,\n        classe: this.classe,\n      };        \n      this.dataAux = {\n        id: \"\",\n        message: \"\"\n      }\n      this.http.put(this.global.urlServer + 'newUserMobile', this.postData).  \n      subscribe((data) => {\n        this.dataAux = data;\n        if (this.dataAux.id === \"email\" ) {\n          this.presentToastErroEmail();\n        } else if (this.dataAux.id === 'phone' ) {\n          this.presentToastErroPhone(); \n        } else if (this.dataAux.id === 'username' ) {\n          this.presentToastErroUserName();\n        } else if ( this.dataAux.id === 0 ) {\n            this.presentToastErro();\n        } else {\n          this.login();\n        }\n      })\n    } else {\n      this.presentToastConfirmPass();\n    }\n  }  \n\n  async presentToastConfirmPass() {\n    const toast = await this.toastController.create({\n      message: 'Plase, confirm password!',\n      duration: 8000,\n      animated: true,\n      showCloseButton: true,\n      color: \"danger\"\n    });\n    toast.present();\n  }\n\n  async presentToastErro() {\n    const toast = await this.toastController.create({\n      message: 'Sorry, wrong login! Plase try again!',\n      duration: 8000,\n      animated: true,\n      showCloseButton: true,\n      color: \"danger\"\n    });\n    toast.present();\n  }\n\n  async presentToastOk() {\n    const toast = await this.toastController.create({\n      message: 'Login was successfull. Enjoy your app ' + this.username,\n      duration: 800,\n      animated: true,\n      showCloseButton: true,\n      color: 'success'\n    });\n    toast.present();\n  }\n\n  login(){\n    this.sendPostRequest(); \n  }\n\n  sendPostRequest() {\n    let postData = {\n      \"username\": '',\n      \"password\": ''\n    }\n    postData.username =  this.username;\n    postData.password = this.password;\n    this.http.put<InterfaceUsers>(this.global.urlServer + \"seekUser\", postData).\n      subscribe(data => {\n        this.userData = data;\n        if ( this.userData.id == 0 ) {\n          this.presentToastErro();\n         this.router.navigateByUrl('/login');\n       } else {        \n         let postData = {\n            \"id\": this.userData.id,\n            \"firstname\": this.userData.firstname,\n            \"lastname\": this.userData.lastname,\n            \"classe\": this.userData.classe,                         \n            \"status\": this.userData.status,\n            \"email\": this.userData.email,\n            \"phone\": this.userData.phone,\n        }\n        this.saveUser(postData);\n        this.presentToastOk(); \n        this.router.navigate(['/welcome']);\n        }\n    })\n  }\n\n  async presentToastErroEmail() {\n    const toast = await this.toastController.create({\n      message: 'Sorry, This email exist in database. Plase try again!',\n      duration: 8000,\n      animated: true,\n      showCloseButton: true,\n      color: \"danger\"\n    });\n    toast.present();\n  }\n\n  async presentToastErroPhone() {\n    const toast = await this.toastController.create({\n      message: 'Sorry, This Phone exist in database. Plase try again!',\n      duration: 8000,\n      animated: true,\n      showCloseButton: true,\n      color: \"danger\"\n    });\n    toast.present();\n  }\n  \n  async presentToastErroUserName() {\n    const toast = await this.toastController.create({\n      message: 'Sorry, This UserName exist in database. Plase try again!',\n      duration: 8000,\n      animated: true,\n      showCloseButton: true,\n      color: \"danger\"\n    });\n    toast.present();\n  }\n\n  saveUser($postData: any) {\n    localStorage.setItem('postLogin', JSON.stringify($postData));\n  }\n\n  getUser() {         \n    return JSON.parse(localStorage.getItem('postLogin'));\n  }\n\n}\n\n"],"sourceRoot":"webpack:///"}