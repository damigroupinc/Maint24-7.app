{"version":3,"sources":["src/app/units/units.page.html","src/app/units/units.module.ts","src/app/units/units.page.scss","src/app/units/units.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ global.name }} - Units</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-item>\\n    <br />\\n    <ion-button color=\\\"success\\\" class=\\\"pt-xs--2\\\" ion-button (click)=\\\"insertUnit()\\\">\\n      <ion-icon name=\\\"add\\\" size=\\\"small\\\"></ion-icon>\\n      ADD PROPERTIES\\n    </ion-button>\\n  </ion-item>\\n  <ion-card *ngFor=\\\"let item of listUnits\\\">\\n    <ion-card-content>\\n      Status:\\n      <ion-icon *ngIf=\\\"item.tenant\\\" size=\\\"small\\\" color=\\\"primary\\\" ios=\\\"ios-key\\\" md=\\\"md-key\\\">\\n      </ion-icon>\\n      <label *ngIf=\\\"item.tenant\\\" color=\\\"primary\\\">\\n        - Rented\\n      </label>\\n      <ion-icon *ngIf=\\\"!item.tenant\\\" size=\\\"small\\\" color=\\\"primary\\\" ios=\\\"ios-checkmark-circle-outline\\\"\\n        md=\\\"md-checkmark-circle-outline\\\">\\n      </ion-icon>\\n      <label *ngIf=\\\"!item.tenant\\\">\\n        <label *ngIf=\\\"!item.phone\\\">\\n          <label *ngIf=\\\"!item.email\\\">\\n            <label color=\\\"primary\\\">\\n              - To be for rent\\n            </label>\\n          </label>\\n        </label>\\n      </label>\\n      <!-- \\n        || = OR\\n        && = AND\\n      -->\\n      <label *ngIf=\\\"!item.tenant\\\">\\n        <label *ngIf=\\\"item.phone || item.email\\\">\\n            <label color=\\\"secondary\\\">\\n              - Waiting for tenant setup \\n            </label>\\n        </label>\\n      </label>\\n      <p>\\n        <ion-label *ngIf=\\\"item.name\\\" color='primary' class=\\\"ion-text-left\\\">\\n          Unit Address: {{ item.name }}\\n        </ion-label>\\n      </p>\\n      <p>\\n        <ion-label *ngIf=\\\"item.email\\\" color='primary' class=\\\"ion-text-left\\\">\\n          Tenant E-mail: {{ item.email }}\\n        </ion-label>\\n        <ion-label *ngIf=\\\"item.phone\\\" color='primary' class=\\\"ion-text-left\\\">\\n          Tenant Phone: {{ item.phone }}\\n        </ion-label>\\n        <ion-label *ngIf=\\\"item.tenant\\\" color='primary' class=\\\"ion-text-left\\\">\\n          Tenant: {{ item.tenant }} <br>Contract: {{ item.contract_id }}\\n        </ion-label>\\n      </p>\\n      <ion-item>\\n        <ion-button class=\\\"pt-xs--2\\\" color='secondary' (click)=\\\"contracts(item.id)\\\">\\n          <ion-icon size=\\\"small\\\" name=\\\"md-paper\\\"></ion-icon>\\n        </ion-button>\\n        <!--ion-button class=\\\"pt-xs--2\\\" color='secondary' (click)=\\\"detailUnit(item.id, item.name, item.email, item.phone)\\\">\\n          <ion-icon size=\\\"small\\\" name=\\\"ios-list-box\\\"></ion-icon>\\n        </ion-button-->\\n        <ion-button class=\\\"pt-xs--2\\\" color='primary' (click)=\\\"updateUnit(item.id, item.name, item.email, item.phone)\\\">\\n          <ion-icon size=\\\"small\\\" name=\\\"create\\\"></ion-icon>\\n        </ion-button>\\n        <div *ngIf=\\\"!item.tenant\\\">\\n          <div *ngIf=\\\"!item.phone\\\">\\n            <div *ngIf=\\\"!item.email\\\">\\n              <ion-button size=\\\"small\\\" class=\\\"pt-xs--2\\\" color=\\\"danger\\\"\\n                (click)=\\\"deleteUnit(item.id, item.name, item.email, item.phone)\\\">\\n                <ion-icon name=\\\"trash\\\" size=\\\"small\\\"></ion-icon>\\n              </ion-button>\\n            </div> \\n          </div>\\n        </div>\\n        <!--\\n        <ion-button class=\\\"pt-xs--2\\\" color=\\\"warning\\\" (click)=\\\"deleteUnit(item.id, item.name, item.email, item.phone)\\\">\\n          <!-- Advanced: explicity set the icon for each platform \\n          <ion-icon ios=\\\"logo-usd\\\" md=\\\"logo-usd\\\"></ion-icon>\\n        </ion-button> \\n        -->\\n        \\n        <div *ngIf=\\\"item.tenant\\\">\\n        <ion-button class=\\\"pt-xs--2\\\" color=\\\"success\\\" (click)=\\\"viewServiceOrders(item.tenant)\\\">\\n            <ion-icon ios=\\\"ios-construct\\\" size=\\\"small\\\" md=\\\"md-construct\\\"></ion-icon>\\n          </ion-button>\\n        </div>\\n\\n      </ion-item>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UnitsPage } from './units.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UnitsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UnitsPage]\n})\nexport class UnitsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VuaXRzL3VuaXRzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ɵConsole } from '@angular/core';\nimport { InterfaceUnits } from '../interfaceunits';\nimport { HttpClient } from '@angular/common/http';\nimport { AlertController } from '@ionic/angular';\nimport { ToastController } from '@ionic/angular';\nimport { GlobalService } from '../global.service';\nimport { InterfaceContract } from '../InterfaceContract';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-units',\n  templateUrl: './units.page.html',\n  styleUrls: ['./units.page.scss'],\n})\n\nexport class UnitsPage implements OnInit {\n\n  public postData: any;\n  public userData: any;\n  public unitData: any;\n  public contractData: any;\n\n  public item: string = \"\";\n  public listUnits: InterfaceUnits;\n  public listContracts: InterfaceContract;\n\n  public name: string = '';\n  public phone: string = '';\n  public email: string = '';\n  public id: string = '';\n\n  constructor(\n    public alertCtrl: AlertController,\n    public global: GlobalService,\n    public http: HttpClient,\n    private router: Router,\n    private toastController: ToastController) { }\n\n  ngOnInit() {\n    this.userData = this.getUser();\n    this.readUnits();\n  }\n\n  viewServiceOrders(tenant: string) {\n    let $param = JSON.stringify({ id: tenant });\n    this.router.navigate(['/viewservices/' + $param]);\n  }\n\n  contracts(unit_id: string) {\n    this.readContracts(unit_id);\n  }\n\n  readContracts(unit_id: string) {\n    this.postData = {\n      action: 'select',\n      table: 'contracts',\n      type: 'landlord',\n      user_id: this.userData.id,\n    };\n    this.http.put<InterfaceContract>\n      (this.global.urlServer + 'crudactions', this.postData).\n      subscribe(data => {\n        this.listContracts = data;\n        this.choiceContracts(this.tratarDados(data), unit_id)\n      });\n  }\n\n  tratarDados(dados: InterfaceContract) {\n    var texto = '[ ';\n    let i = 0;\n    for (var s in dados) {\n      if (i > 0) { texto = texto + ',' };\n      var texto = texto + '{\"name\": \"' + \"radio\" + i + '\",';\n      var texto = texto + ' \"type\": \"radio\",';\n      var texto = texto + ' \"label\": \"' + dados[i].name + '\",';\n      var texto = texto + ' \"value\": \"' + dados[i].id + '\"';\n      var texto = texto + ' }';\n      i = i + 1;\n    }\n    var texto = texto + ' ]';\n    var objeto = JSON.parse(texto);\n    return objeto;\n  }\n\n  async choiceContracts(texto: any, unit_id: string) {\n\n\n\n    console.log(texto);\n    const alert = await this.alertCtrl.create({\n      /*  const alert = await this.alertCtrl.create({\n          header: 'Radio',\n          inputs: [\n            {\n              name: 'radio1',\n              type: 'radio',\n              label: 'Radio 1 um',\n              value: 'value1',\n              checked: true\n            },\n            {\n              name: 'radio2',\n              type: 'radio',\n              label: 'Radio 2',\n              value: 'value2'\n            },\n            {\n              name: 'radio3',\n              type: 'radio',\n              label: 'Radio 3',\n              value: 'value3'\n            },\n            {\n              name: 'radio4',\n              type: 'radio',\n              label: 'Radio 4',\n              value: 'value4'\n            },\n            {\n              name: 'radio5',\n              type: 'radio',\n              label: 'Radio 5',\n              value: 'value5'\n            },\n            {\n              name: 'radio6',\n              type: 'radio',\n              label: 'Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 Radio 6 ',\n              value: 'value6'\n            }\n          ],\n          buttons: [\n            {\n              text: 'Cancel',\n              role: 'cancel',\n              cssClass: 'secondary',\n              handler: () => {\n                console.log('Confirm Cancel');\n              }\n            }, {\n              text: 'Ok',\n              handler: (data) => {\n                console.log('Confirm Ok', data);\n              }\n            }\n          ]\n        });\n    \n        await alert.present();\n      } */\n\n      header: 'Contracts',\n      inputs: texto,\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        },\n        {\n          text: 'Ok',\n          handler: (data) => {\n            console.log('OK ---> Data -> ' + JSON.stringify(data));\n            // update record add id contract \n            this.postData = {\n              id: unit_id,\n              contract_id: data,\n              type: 'landlordContractUnit',\n              table: 'units',\n              action: 'update',\n            };\n            this.http.put(this.global.urlServer + 'crudactions', this.postData).\n              subscribe((data) => {\n              });\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  readUnits() {\n    this.postData = {\n      user_id: this.userData.id,\n      table: 'units',\n      action: 'select',\n      type: 'landlord'\n    };\n    this.http.put<InterfaceUnits>\n      (this.global.urlServer + 'crudactions', this.postData).\n      subscribe(data => { this.listUnits = data; console.log(data) });\n  }\n\n  itsForRent(email: string, phone: string, unit_id: string) {\n    this.unitData = {\n      id: 'x',\n    };\n    if ((!email) && (!phone)) {\n      this.postData = {\n        unit_id: unit_id,\n        action: 'find_unit',\n      };\n      this.http.put<InterfaceUnits>\n        (this.global.urlServer + 'crudactions', this.postData).\n        subscribe(data => { this.unitData = data; });\n\n      if (this.unitData.id == '0') { return true }\n      else { return false }\n    }\n  }\n\n  senddeleteUnits(idx) {\n    this.postData = {\n      id: idx,\n      type: 'landlord',\n      table: 'units',\n      action: 'delete',\n    };\n    this.http.put(this.global.urlServer + 'crudactions', this.postData).\n      subscribe((data) => {\n      });\n  }\n\n  sendinsertUnit(unitx, phonex, emailx) {\n    this.postData = {\n      name: unitx,\n      phone: phonex,\n      email: emailx,\n      user_id: this.userData.id,\n      type: 'landlord',\n      table: 'units',\n      action: 'insert',\n    };\n    this.http.put(this.global.urlServer + 'crudactions', this.postData).\n      subscribe((data) => {\n      });\n  }\n\n  sendupdateUnit(idx, namex, emailx, phonex) {\n    this.postData = {\n      id: idx,\n      name: namex,\n      email: emailx,\n      phone: phonex,\n      type: 'landlord',\n      table: 'units',\n      action: 'update',\n    };\n    this.http.put(this.global.urlServer + 'crudactions', this.postData).\n      subscribe((data) => {\n      });\n  }\n\n  async presentToastOk() {\n    const toast = await this.toastController.create({\n      message: 'Update record was successfull. Enjoy your app ' + this.name,\n      duration: 800,\n      animated: true,\n      showCloseButton: true,\n      color: 'success'\n    });\n    toast.present();\n  }\n\n  getUser() {\n    return JSON.parse(localStorage.getItem('postLogin'));\n  }\n\n  async updateUnit(index, name, email, phone) {\n    const alert = await this.alertCtrl.create({\n      header: 'Edit',\n      inputs: [\n        {\n          label: 'Unit',\n          name: 'name',\n          type: 'text',\n          id: 'name',\n          value: name,\n          placeholder: 'Unit',\n        },\n        {\n          label: 'Email',\n          name: 'email',\n          type: 'email',\n          id: 'email',\n          value: email,\n          placeholder: 'email',\n        },\n        {\n          label: 'Phone',\n          name: 'phone',\n          type: 'text',\n          id: 'phone',\n          value: phone,\n          placeholder: 'Phone',\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Ok',\n          handler: data => {\n            let namex = data.name;\n            let emailx = data.email;\n            let phonex = data.phone;\n            console.log('Confirm Ok');\n            this.sendupdateUnit(index, namex, emailx, phonex);\n            this.readUnits();\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async deleteUnit(index, name, email, phone) {\n    const alert = await this.alertCtrl.create({\n      header: 'Delete the units id ' + index + ' Unit:' + name,\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        },\n        {\n          text: 'Delete',\n          cssClass: 'danger',\n          handler: data => {\n            console.log(index);\n            this.senddeleteUnits(index);\n            this.readUnits();\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async insertUnit() {\n    const alert = await this.alertCtrl.create({\n      header: 'Edit',\n      inputs: [\n        {\n          label: 'Unit',\n          name: 'unit',\n          type: 'text',\n          id: 'unit',\n          value: '',\n          placeholder: 'Unit',\n        },\n        {\n          label: 'Phone',\n          name: 'phone',\n          type: 'text',\n          id: 'phone',\n          value: '',\n          placeholder: 'Phone',\n        },\n        {\n          label: 'Email',\n          name: 'email',\n          type: 'email',\n          id: 'email',\n          value: '',\n          placeholder: 'E-mail',\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Ok',\n          handler: data => {\n            let unit = data.unit;\n            let phone = data.phone;\n            let email = data.email;\n\n            console.log('Insert Ok');\n            this.sendinsertUnit(unit, phone, email);\n            this.readUnits();\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async detailUnit(id, name, email, phone) {\n    const alert = await this.alertCtrl.create({\n      header: 'Detail',\n      inputs: [\n        {\n          label: 'id',\n          name: 'id',\n          type: 'text',\n          id: 'id',\n          value: id,\n          placeholder: 'id',\n        },\n        {\n          label: 'name',\n          name: 'name',\n          type: 'text',\n          id: 'name',\n          value: name,\n          placeholder: 'name',\n        },\n        {\n          label: 'Phone',\n          name: 'phone',\n          type: 'text',\n          id: 'phone',\n          value: phone,\n          placeholder: 'Phone',\n        },\n        {\n          label: 'Email',\n          name: 'email',\n          type: 'email',\n          id: 'email',\n          value: email,\n          placeholder: 'E-mail',\n        },\n      ],\n      buttons: [\n        {\n          text: 'Ok',\n          handler: data => {\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n}"],"sourceRoot":"webpack:///","file":"units-units-module-es5.js"}