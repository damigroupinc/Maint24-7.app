{"version":3,"sources":["src/app/profile/profile.page.html","src/app/profile/profile.module.ts","src/app/profile/profile.page.scss","src/app/profile/profile.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"home\\\">\\n      </ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      {{ global.name }} - Profile\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"ion-padding\\\" class='loginPage' scroll='false'>\\n  <ion-grid style='height: 100%'>\\n    <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\" style='height: 80%'>\\n      <ion-grid class='login-container'>\\n        <form #loginForm='ngForm' (ngSubmit)='login()' autocomplete='off' class='login-form'>\\n          <ion-row>\\n            <ion-col>\\n              <ion-list inset>\\n                <ion-label><strong>{{ classe }}'s</strong> proffile<br /> <br /></ion-label>\\n                <ion-item>\\n                  <ion-label>First Name<br /></ion-label>\\n                  <ion-input placeholder='First name' name='firstname' id='firstname' type='firstname' required\\n                    [(ngModel)]='firstname' style=\\\"background-Color: '#red';\\\">\\n                  </ion-input>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-label>Last Name<br /></ion-label>\\n                  <ion-input placeholder='Lastname' name='lastname' id='lastname' type='lastname' required\\n                    [(ngModel)]='lastname' style=\\\"background-Color: '#red';\\\">\\n                  </ion-input>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-label>Email<br /></ion-label>\\n                  <ion-input placeholder='Email' name='email' id='email' type='email' required [(ngModel)]='email'\\n                    style=\\\"background-Color: '#red';\\\">\\n                  </ion-input>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-label>Phone<br /></ion-label>\\n                  <ion-input placeholder='phone' name='phone' id='phone' type='phone' required [(ngModel)]='phone'\\n                    style=\\\"background-Color: '#red';\\\">\\n                  </ion-input>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-label>Username<br /></ion-label>\\n                  <ion-input placeholder='Username' name='username' id='username' type='text' required\\n                    [(ngModel)]='username' style=\\\"background-Color: '#red';\\\">\\n                  </ion-input>\\n                </ion-item>\\n                <ion-button color=\\\"success\\\" class=\\\"pt-xs--4\\\" ion-button (click)=\\\"updateUser()\\\"\\n                  [disabled]='!loginForm.form.valid'>\\n                  <ion-icon name=\\\"checkmark-circle\\\" size=\\\"small\\\"></ion-icon>\\n                  Submit\\n                </ion-button>\\n              </ion-list>\\n            </ion-col>\\n          </ion-row>\\n        </form>\\n      </ion-grid>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { ToastController } from '@ionic/angular'; \nimport { NavController } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { InterfaceUsers } from '../interfaceusers';\nimport { Router } from '@angular/router';\n\nimport { GlobalService } from '../global.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n    \n  public userData: InterfaceUsers;\n  public postData: any;\n  public dataAux: any;\n\n  public username: string = \"\";      \n  public password: string = \"\";  \n  public confirmpassword: string = \"\";\n\n  public email: string = \"\"; \n  public phone: string = \"\";\n  public classe: string = \"\";\n  public firstname: string = \"\";\n  public lastname: string = \"\";\n   \n  constructor(\n    private toastController: ToastController,   \n    public navCtrl: NavController,\n    private router: Router, \n    public global: GlobalService,\n    public http: HttpClient ) {}\n      \n  ngOnInit() {\n    this.userData = this.getUser();\n\n    this.username = this.userData.username;    \n    this.password = this.userData.password;\n    this.email = this.userData.email;\n    this.phone = this.userData.phone;\n    this.firstname = this.userData.firstname;\n    this.lastname = this.userData.lastname;\n    this.classe = this.userData.classe;\n  };        \n  \n  updateUser() {    \n    if (this.confirmpassword == this.password) {\n      this.postData = {\n        username: this.username,      \n        password: this.password,  \n        email: this.email,\n        phone: this.phone,\n        firstname: this.firstname,\n        lastname: this.lastname,\n        classe: this.classe,\n      };        \n      this.dataAux = {\n        id: \"\",\n        message: \"\"\n      }\n      this.http.put(this.global.urlServer + 'newUserMobile', this.postData).  \n      subscribe((data) => {\n        this.dataAux = data;\n        if (this.dataAux.id === \"email\" ) {\n          this.presentToastErroEmail();\n        } else if (this.dataAux.id === 'phone' ) {\n          this.presentToastErroPhone(); \n        } else if (this.dataAux.id === 'username' ) {\n          this.presentToastErroUserName();\n        } else if ( this.dataAux.id === 0 ) {\n            this.presentToastErro();\n        } else {\n          this.login();\n        }\n      })\n    } else {\n      this.presentToastConfirmPass();\n    }\n  }  \n\n  async presentToastConfirmPass() {\n    const toast = await this.toastController.create({\n      message: 'Plase, confirm password!',\n      duration: 8000,\n      animated: true,\n      showCloseButton: true,\n      color: \"danger\"\n    });\n    toast.present();\n  }\n\n  async presentToastErro() {\n    const toast = await this.toastController.create({\n      message: 'Sorry, wrong login! Plase try again!',\n      duration: 8000,\n      animated: true,\n      showCloseButton: true,\n      color: \"danger\"\n    });\n    toast.present();\n  }\n\n  async presentToastOk() {\n    const toast = await this.toastController.create({\n      message: 'Login was successfull. Enjoy your app ' + this.username,\n      duration: 800,\n      animated: true,\n      showCloseButton: true,\n      color: 'success'\n    });\n    toast.present();\n  }\n\n  login(){\n    this.sendPostRequest(); \n  }\n\n  sendPostRequest() {\n    let postData = {\n      \"username\": '',\n      \"password\": ''\n    }\n    postData.username =  this.username;\n    postData.password = this.password;\n    this.http.put<InterfaceUsers>(this.global.urlServer + \"seekUser\", postData).\n      subscribe(data => {\n        this.userData = data;\n        if ( this.userData.id == 0 ) {\n          this.presentToastErro();\n         this.router.navigateByUrl('/login');\n       } else {        \n         let postData = {\n            \"id\": this.userData.id,\n            \"firstname\": this.userData.firstname,\n            \"lastname\": this.userData.lastname,\n            \"classe\": this.userData.classe,                         \n            \"status\": this.userData.status,\n            \"email\": this.userData.email,\n            \"phone\": this.userData.phone,\n        }\n        this.saveUser(postData);\n        this.presentToastOk(); \n        this.router.navigate(['/welcome']);\n        }\n    })\n  }\n\n  async presentToastErroEmail() {\n    const toast = await this.toastController.create({\n      message: 'Sorry, This email exist in database. Plase try again!',\n      duration: 8000,\n      animated: true,\n      showCloseButton: true,\n      color: \"danger\"\n    });\n    toast.present();\n  }\n\n  async presentToastErroPhone() {\n    const toast = await this.toastController.create({\n      message: 'Sorry, This Phone exist in database. Plase try again!',\n      duration: 8000,\n      animated: true,\n      showCloseButton: true,\n      color: \"danger\"\n    });\n    toast.present();\n  }\n  \n  async presentToastErroUserName() {\n    const toast = await this.toastController.create({\n      message: 'Sorry, This UserName exist in database. Plase try again!',\n      duration: 8000,\n      animated: true,\n      showCloseButton: true,\n      color: \"danger\"\n    });\n    toast.present();\n  }\n\n  saveUser($postData: any) {\n    localStorage.setItem('postLogin', JSON.stringify($postData));\n  }\n\n  getUser() {         \n    return JSON.parse(localStorage.getItem('postLogin'));\n  }\n\n}\n\n"],"sourceRoot":"webpack:///","file":"profile-profile-module-es5.js"}